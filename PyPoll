import os
import csv

# Make this files loaded and outputted (Remember to change these later)
file_to_load = "raw_data/election_data_2.csv"
file_to_output = "analysis/election_analysis_2.txt"

# Total Vote Counters(V.C.)
total_votes = 0

# Options of Candidate and V.C.
candidate_options = []
candidate_votes = {}

# Winning Count and Willing Candidate
winning_candidate = ""
winning_count = 0

# Read the csv and convert it into a list in dictionaries
with open(file_to_load) as election_data:
    reader = csv.DictReader(election_data)

    # For each row...
    for row in reader:

        # Run the loader of animation
        print(". ", end=""),

        # Add in the total-vote amount
        total_votes = total_votes + 1

        # Take each candidates name from the rows
        candidate_name = row["Candidate"]

        # If the candidate does not match any existing candidate...
        # (Make the loop discover the candidates as it goes)
        if candidate_name not in candidate_options:

            # Add it to the list of candidates in the running
            candidate_options.append(candidate_name)

            # And begin tracking that candidate's voter count
            candidate_votes[candidate_name] = 0

        # Next add in vote to the candidate's count
        candidate_votes[candidate_name] = candidate_votes[candidate_name] + 1

# Print the results and export the data to our text file
with open(file_to_output, "w") as txt_file:

    # Print the final vote count (inside my terminal)
    election_results = (
        f"\n\nElection Results\n"
        f"-------------------------\n"
        f"Total Votes: {total_votes}\n"
        f"-------------------------\n")
    print(election_results, end="")

    # Save the final vote count to a text file
    txt_file.write(election_results)

    # Decide the winner by looping in each count
    for candidate in candidate_votes:

        # Next Retrieve the vote counts and each percentile
        votes = candidate_votes.get(candidate)
        vote_percentage = float(votes) / float(total_votes) * 100

        # Decide the winning votes count and candidate
        if (votes > winning_count):
            winning_count = votes
            winning_candidate = candidate

        # Print each candidate's voter count and percentage (inside of my terminal)
        voter_output = f"{candidate}: {vote_percentage:.3f}% ({votes})\n"
        print(voter_output, end="")

        # Save each candidate's voter count and percentile to text file
        txt_file.write(voter_output)

    # Print the winning candidate (inside of my terminal)
    winning_candidate_summary = (
        f"-------------------------\n"
        f"Winner: {winning_candidate}\n"
        f"-------------------------\n")
    print(winning_candidate_summary)

    # Remember to keep the candidate who will when name to the text file
    txt_file.write(winning_candidate_s
